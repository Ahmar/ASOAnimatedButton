{"name":"ASOAnimatedButton","tagline":"ASOAnimatedButton is a storyboard-friendly library to animate button to have a two-state or bounce effect.","body":"# BounceButtonExample\r\n\r\nThis App shows the implementation of buttons with bounce effect as menu items.\r\n\r\n![ASOBounceButton with 'Expand' style animation preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-expand-preview.gif)\r\n\r\n## How To\r\n\r\n### Integrate the library\r\n\r\nAdd these lines in the Podfile:\r\n\r\n``` ruby\r\nplatform :ios, '7.0'\r\npod 'ASOAnimatedButton'\r\n```\r\n\r\n### Storyboard\r\n\r\n#### Menu Button with Two-State effect\r\n\r\nDefine each image name as values of `OnStateImageName` and `OffStateImageName` keys in `User Defined Runtime Attributes` of the `ASOTwoStateButton` object.\r\n\r\n![ASOBounceButton 'Expand' menu storyboard preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-expand-menu-storyboard.png)\r\n\r\n#### Menu Item View\r\n\r\nAdd a stand-alone UIViewController object in Storyboard with your given ID. In this example we define its Storyboard ID as `ExpandMenu`:\r\n\r\n![ASOBounceButton 'Expand' menu item storyboard preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-expand-menuitem-storyboard.png)\r\n\r\nCreate `BounceButtonView` Class as a subclass of ASOBounceButtonView and define it the Class of `Menu Item View`:  \r\n\r\n![ASOBounceButton 'Expand' menu item storyboard preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-expand-menuitembuttons-storyboard.png)\r\n\r\nSet the outlet of all the buttons defined on `Menu Item View` to the `BounceButtonView` Class:\r\n\r\n``` objectivec\r\n#import \"ASOBounceButtonView.h\"\r\n\r\n@interface BounceButtonView : ASOBounceButtonView\r\n\r\n@property (weak, nonatomic) IBOutlet UIButton *menuItem1;\r\n@property (weak, nonatomic) IBOutlet UIButton *menuItem2;\r\n@property (weak, nonatomic) IBOutlet UIButton *menuItem3;\r\n@property (weak, nonatomic) IBOutlet UIButton *menuItem4;\r\n\r\n@end\r\n```\r\n\r\n### Implementation\r\n\r\nSet the designated UIViewController as the delegate of `ASOBounceButtonView` Class\r\n\r\n``` objectivec\r\n#import <UIKit/UIKit.h>\r\n#import \"ASOTwoStateButton.h\"\r\n#import \"ASOBounceButtonViewDelegate.h\"\r\n#import \"BounceButtonView.h\"\r\n\r\n@interface ExpandStyleMenuViewController : UIViewController <ASOBounceButtonViewDelegate>\r\n\r\n@property (strong, nonatomic) IBOutlet ASOTwoStateButton *menuButton;\r\n@property (strong, nonatomic) BounceButtonView *menuItemView;\r\n\r\n- (IBAction)menuButtonAction:(id)sender;\r\n\r\n```\r\n\r\n#### Set 'Two-State' effect to the `Menu Button`:\r\n\r\n``` objectivec\r\n[self.menuButton initAnimationWithFadeEffectEnabled:YES]; // Set to 'NO' to disable Fade effect between its two-state transition\r\n```\r\n\r\n#### Acquire the `Menu Item View` from Storyboard:\r\n\r\n``` objectivec\r\n// Get the 'menu item view' from storyboard\r\nUIStoryboard *mainStoryboard = [UIStoryboard storyboardWithName:@\"Main_iPhone\" bundle:nil];\r\nUIViewController *menuItemsVC = (UIViewController *)[mainStoryboard instantiateViewControllerWithIdentifier:@\"ExpandMenu\"];\r\nself.menuItemView = (BounceButtonView *)menuItemsVC.view;\r\n```\r\n\r\n#### Add buttons as bounce buttons to the `Menu Item View`\r\n\r\n``` objectivec\r\nNSArray *arrMenuItemButtons = [[NSArray alloc] initWithObjects:self.menuItemView.menuItem1,\r\n                                self.menuItemView.menuItem2,\r\n                                self.menuItemView.menuItem3,\r\n                                self.menuItemView.menuItem4,\r\n                                nil]; // Add all of the defined 'menu item button' to 'menu item view'\r\n[self.menuItemView addBounceButtons:arrMenuItemButtons];\r\n```\r\n\r\n#### Set the animation starting point\r\n\r\nThe animation starting point is the `Menu Button` position. Send the `Menu Button` frame property to the `Menu Item View` on `viewDidAppear` event and every time there is a change in device orientation:\r\n\r\n``` objectivec\r\n- (void)viewDidAppear:(BOOL)animated\r\n{\r\n    // Tell 'menu button' position to 'menu item view'\r\n    [self.menuItemView setAnimationStartFromHere:self.menuButton.frame];\r\n}\r\n\r\n- (void)willAnimateRotationToInterfaceOrientation:\r\n(UIInterfaceOrientation)toInterfaceOrientation\r\n                                         duration:(NSTimeInterval)duration\r\n{\r\n    // Update 'menu button' position to 'menu item view' everytime there is a change in device orientation\r\n    [self.menuItemView setAnimationStartFromHere:self.menuButton.frame];\r\n}\r\n```\r\n\r\n#### Expand and collapsed the `Menu Item View`\r\n\r\n``` objectivec\r\n- (IBAction)menuButtonAction:(id)sender\r\n{\r\n    if ([sender isOn]) {\r\n        // Show 'menu item view' and expand its 'menu item button'\r\n        [self.menuButton addCustomView:self.menuItemView];\r\n        [self.menuItemView expandWithAnimationStyle:ASOAnimationStyleExpand];\r\n    }\r\n    else {\r\n        // Collapse all 'menu item button' and remove 'menu item view'\r\n        [self.menuItemView collapseWithAnimationStyle:ASOAnimationStyleExpand];\r\n        [self.menuButton removeCustomView:self.menuItemView interval:[self.menuItemView.collapsedViewDuration doubleValue]];\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### Add custom actions in the `Menu Item View' delegate method\r\n\r\n``` objectivec\r\n- (void)didSelectBounceButtonAtIndex:(NSUInteger)index\r\n{\r\n    // Collapse all 'menu item button' and remove 'menu item view' once a menu item is selected\r\n    [self.menuButton sendActionsForControlEvents:UIControlEventTouchUpInside];\r\n    \r\n    // Add your custom action for each selected 'menu item button' here\r\n    NSLog(@\"Menu Item %x is selected\", (short)index];\r\n    \r\n}\r\n```\r\n\r\n## Controls\r\n\r\nControl the speed of each animated button:\r\n``` objectivec\r\n@property (strong, nonatomic) NSNumber *speed;\r\n```\r\n\r\nControl the speed of fade-out effect when the view is collapsed:\r\n``` objectivec\r\n@property (strong, nonatomic) NSNumber *fadeOutDuration;\r\n```\r\n\r\nControl the bouncing distance of each animated button:\r\n``` objectivec\r\n@property (strong, nonatomic) NSNumber *bouncingDistance;\r\n```\r\n\r\nControl which animation style to be used\r\n``` objectivec\r\n@property (nonatomic) ASOAnimationStyle animationStyle;\r\n```\r\n\r\n## Animation Style\r\n\r\nThere three available Animation Style:\r\n\r\n`ASOAnimationStyleExpand` provides an effect of growing where buttons movement follow the path of other buttons defined in its previous order:\r\n\r\n![ASOAnimationStyleExpand animation preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-expand-preview.gif)\r\n\r\n`ASOAnimationStyleRiseProgressively` provides an effect where all defined buttons move directly from starting positon to its final position. The movement pace of each buttons are slower gradually:\r\n\r\n![ASOAnimationStyleRiseProgressively animation preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-ASOAnimationStyleRiseProgressively-preview.gif)\r\n\r\n`ASOAnimationStyleRiseConcurrently` provides an effect where all defined buttons move directly from starting position to its final position at the same time:\r\n\r\n![ASOAnimationStyleRiseConcurrently animation preview](https://raw.githubusercontent.com/wiki/agusso/ASOAnimatedButton/Assets/ASOBounceButton-ASOAnimationStyleRiseConcurrently-preview.gif)\r\n\r\n## Getting Help\r\n\r\nIf you need help using `ASOAnimatedButton`, please post a question on [StackOverflow with the \"ASOAnimatedButton\" tag](http://stackoverflow.com/questions/ask?tags=asoanimatedbutton).\r\n\r\nIf you think you found a problem with `ASOAnimatedButton`, please [post an issue](https://github.com/agusso/ASOAnimatedButton/issues). A sample project or fork of any of the examples demonstrating the problem will be helpful.\r\n\r\n## Author\r\nAgus Soedibjo. Copyright (c) 2014 Agus Soedibjo, contact@soedibjo.com\r\n\r\n## License\r\n\r\n`ASOAnimatedButton` is available under the MIT license. See the LICENSE file for more info.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}